comment: |
  Fills a PDF template file (Universal). 
  Place your template file in .//templates/pdf folder.
  It will output an attachment structure and if you call it with .bin requester it will trigger a download in the client Browser.
responseTimeout: 120
↓inputVars [steps.InputVariablesStep-1740058697334]: 
↓IfExistThenElse [steps.IfExistThenElseStep-1740070875054]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1740058697334
        - java.lang.String: 
          - ↑value: ./markers/array
  ↓jThen [steps.ThenStep-1740070876435]: 
    ↓markers [steps.JsonSourceStep-1740058822026]: 
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1740058697334
            - java.lang.String: 
              - ↑value: ./markers/array
      variableName: o_markers
  ↓jElse [steps.ElseStep-1740070876437]: 
    ↓markers [steps.JsonSourceStep-1740070905742]: 
      sourceDefinition: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: 1740058697334
            - java.lang.String: 
              - ↑value: ./markers/text()
      variableName: o_markers
↓Source [steps.XMLComplexStep-1740057614974]: 
  nodeName: source
  output: false
  ↓jIterator [steps.SimpleIteratorStep-1740070501858]: 
    expression: o_markers
    ↓field [steps.JsonFieldStep-1740070594252]: 
      key: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
          - SmartType: 
            - ↑mode: JS
            - →→: item.tag
      output: false
      value: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
          - SmartType: 
            - ↑mode: JS
            - →→: item.value
↓get_file_pathname [steps.SimpleStep-1740499418895]: 
  expression: |
    'function get_file_name(file_path){
    	if(file_path != ""){
    		return org.apache.commons.io.FilenameUtils.getName(get_full_path(file_path));
    	}
    }
    
    function get_full_path(file_path){
    	if(file_path != ""){
    		project_directory_path = context.getProjectDirectory().replace("\\", "/") + "/";
     		if(file_path.indexOf(".//") != -1){
      			file_path = project_directory_path + file_path.substring(3);
    		}
     		else if(file_path.indexOf("./") != -1){
      			file_path = project_directory_path + "../" + file_path.substring(3);;
    		}
    	}
    	return file_path;
    }
    
    var file_name = get_file_name(get_file_name(output_filename));
    var output_path = get_full_path(output_filename);'
↓Form_PDF [steps.PdfFormStep-1740057614989]: 
  fieldsList: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: SOURCE
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1740057614974
          - java.lang.String: 
            - ↑value: .
  filePath: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: JS
        - →→: input_filename
  targetFile: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: JS
        - →→: output_filename
↓Element [steps.XMLElementStep-1740057614992]: 
  nodeName: attachment
  ↓jAttribute [steps.AttributeStep-1740057614995]: 
    expression: '"attachment"'
    nodeName: type
  ↓jAttribute1 [steps.AttributeStep-1740057614998]: 
    expression: file_name
    nodeName: name
  ↓jAttribute11 [steps.AttributeStep-1740057615001]: 
    expression: output_path
    nodeName: local-url
  ↓jAttribute2 [steps.AttributeStep-1740057615004]: 
    expression: '"application/octet-stream"'
    nodeName: content-type
↓output_filename [variables.RequestableVariable-1740057615019]: 
  comment: |
    'PDF output file path. 
    Can be an absolute path or a relative Convertigo path: 
    ".//" is relative to the project''s path. 
    "./" is relative to the workspace path.'
  required: true
↓input_filename [variables.RequestableVariable-1740057615022]: 
  comment: |
    'PDF input file path. 
    Can be an absolute path or a relative Convertigo path: 
    ".//" is relative to the project''s path. 
    "./" is relative to the workspace path.'
  required: true
↓markers [variables.RequestableVariable-1740057718160]: 
  comment: |
    'Structured array as follow : 
    
    [
    	{
    		"tag": "&lt;tag name in template file to replace with ''value'' key&gt;",
    		"type": "&lt;tag type. ''image'' or ''string'' supported&gt;",
    		"value": "&lt;replacement string or image absolute path&gt;"
    	}
    ]'
↓Test_Case [core.TestCase]: 
  ↓output_filename [variables.TestCaseVariable-1740057615038]: 
    description: Output file name
    value: .//outputs/out_XXX_YYY.pdf
  ↓input_filename [variables.TestCaseVariable-1740057615041]: 
    description: Input file name
    required: true
    value: .//templates/pdf/template.pdf
  ↓markers [variables.TestCaseVariable-1740058917829]: 
    value: '[ { "tag": "__c8o_date", "type": "string", "value": "February 25, 2025" }, { "tag": "__c8o_objet", "type": "string", "value": "Resignation Letter" }, { "tag": "__c8o_texte", "type": "string", "value": "Dear Sir,\nDear Madam,\nDear Miss" }, { "tag": "__c8o_signature", "type": "image", "value": "C:/Convertigo/Studio 8.3.2/workspace/.metadata/.plugins/com.twinsoft.convertigo.studio/git/c8oprj-lib-odftoolkit_master/templates/sarah_signature_sample.png" } ]'